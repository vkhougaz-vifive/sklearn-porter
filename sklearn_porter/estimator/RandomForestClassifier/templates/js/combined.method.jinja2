{{ methods }}

} // constructor

private _compute(features: number[]) {
    var nTrees = this.forest.length,
        nClasses = {{ n_classes }};
    var probas: number[] = new Array(nClasses).fill(0);
    var i, j;
    for (i = 0; i < nTrees; i++) {
        var temp = this.forest[i](features);
        for (j = 0; j < nClasses; j++) {
            probas[j] += temp[j];
        }
    }
    for (j = 0; j < nClasses; j++) {
        probas[j] /= nTrees;
    }
    return probas;
}

public predict(features: number[]) {
    return this._findMax(this._compute(features));
};

public predictProba(features: number[]) {
    return this._compute(features);
};